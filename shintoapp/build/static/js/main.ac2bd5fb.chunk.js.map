{"version":3,"sources":["images/shintoapplogo.png","container/Home.js","container/Mine.js","container/Buy.js","container/Sell.js","container/Browse.js","container/Details.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","props","react_default","a","createElement","className","Mine","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","mineCoins","event","preventDefault","console","log","coins","Math","floor","random","state","choosenNumber","setState","axios","post","concat","then","response","totalShintoCoins","data","catch","error","handleChange","defineProperty","target","name","value","onSubmit","onChange","React","Component","Buy","updateShintoCoins","get","totalCoins","ownedCoins","buyCoins","coinsToBuy","type","Sell","sellCoins","e","coinsToSell","parseInt","message","Browse","ledgerData","test","_this2","ledgerdata","length","colspan","map","item","idx","Action","Count","react_router_dom","to","id","Details","detailData","match","params","detaildata","App","src","logo","alt","react_router","exact","from","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac2bd5fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shintoapplogo.59d09cc8.png\";","import React from 'react';\nimport '../styles/styles.css';\n\nconst Home = (props) => {\n  return (\n    <div className=\"parentdiv\">\n      <h1>ShintoCoin</h1>\n      <p>Welcome to ShintoCoins, ShintoCoins are coins made by solving<br></br> algorithms! To get started, head over to Mine Coins' and get to Work!</p>\n    </div >\n\n  );\n\n}\nexport default Home;","import React from 'react';\nimport '../styles/styles.css';\nimport axios from 'axios';\n\n\nclass Mine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coins: '',\n      choosenNumber: '',\n      totalShintoCoins: 0,\n\n    };\n  };\n\n  //mine Shinto coins\n  mineCoins = (event) => {\n    event.preventDefault();\n    console.log(\"it is time to mine some shinto coins\");\n    var coins = Math.floor(Math.random() * this.state.choosenNumber);\n    //Make a post call to the server to save this info\n\n    this.setState({ coins, choosenNumber: '' }, () => {\n      if (this.state.coins !== '') {\n        axios.post(`/mineorbuycoins/count/${this.state.coins}/action/mine`)\n          .then((response) => {\n            this.setState({ totalShintoCoins: response.data.totalShintoCoins });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  render() {\n    return (\n\n      <div className=\"parentdiv\">\n        <h1>Mine ShintoCoins</h1>\n        <p>Here you can mine ShintoCoins by being the first to click on the below awesome button!</p>\n        <form onSubmit={this.mineCoins}>\n          <label>Type in your favourite fibonacci Number:</label>\n          <input name=\"choosenNumber\" onChange={this.handleChange} value={this.state.choosenNumber} />\n          <button className=\"btn\">Mine Coins</button>\n        </form>\n        {this.state.coins\n          ? (\n            <div>\n              <h2> ShintoCoins mined: {this.state.coins}</h2>\n              <h2>Total Shinto Coins owned so far: {this.state.totalShintoCoins}</h2>\n            </div>\n          ) : ''\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default Mine;\n\n\n\n","import React from 'react';\nimport axios from 'axios';\nimport '../styles/styles.css';\n\nclass Buy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalCoins: '',\n      coinsToBuy: '',\n    };\n  };\n  componentDidMount() {\n    this.updateShintoCoins();\n  }\n\n  updateShintoCoins = () => {\n    //get call to express server to fetch the shinto counter\n    axios.get('/ownedcoins')\n      .then((response) => {\n        this.setState({ totalCoins: response.data.ownedCoins });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  buyCoins = (event) => {\n    event.preventDefault();\n    axios.post(`/mineorbuycoins/count/${this.state.coinsToBuy}/action/buy`)\n      .then((response) => {\n        this.setState({ totalCoins: response.data.totalShintoCoins });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    //this.updateShintoCoins();\n    this.setState({ coinsToBuy: '' })\n\n  }\n\n  render() {\n    return (\n      <div className=\"parentdiv\">\n        <h1>Buy ShintoCoins</h1>\n        <h3>Current ShintoCoin Value: $1:00</h3>\n        <h3>Number of ShintoCoins Owned: {this.state.totalCoins}</h3>\n        <form onSubmit={this.buyCoins}>\n          <label>How many coins do you want to buy?</label>\n          <input name=\"coinsToBuy\" onChange={this.handleChange} value={this.state.coinsToBuy} />\n          <button className=\"btn\" type=\"submit\">Buy</button>\n        </form>\n      </div >\n    )\n\n  }\n}\nexport default Buy;","import React from 'react';\nimport axios from 'axios';\nimport '../styles/styles.css';\n\nclass Sell extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalCoins: '',\n      coinsToSell: '',\n      message: '',\n    };\n\n  };\n\n  componentDidMount() {\n    this.updateShintoCoins();\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  updateShintoCoins = () => {\n    //get call to express server to fetch the shinto counter\n    axios.get('/ownedcoins')\n      .then((response) => {\n        this.setState({ totalCoins: response.data.ownedCoins });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n  }\n\n  sellCoins = (e) => {\n    console.log(\"sell coins\");\n    e.preventDefault();\n    //sell only if totalcoins > coinsToSell\n    var coinsToSell = this.state.coinsToSell;\n    if (parseInt(this.state.totalCoins) >= parseInt(coinsToSell)) {\n      //post call - pass info to server \n      axios.post(`/sellcoins/${coinsToSell}`)\n        .then((response) => {\n          this.setState({ totalCoins: response.data.totalShintoCoins, message: `Shinto coins sold ${coinsToSell}` });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n    else {\n      this.setState({ message: `You own ${this.state.totalCoins} coins. Cannot sell ${coinsToSell} coins at this time.` })\n    }\n    this.setState({ coinsToSell: '' });\n  }\n\n  render() {\n    return (\n      <div className=\"parentdiv\">\n        <h1>Sell ShintoCoins</h1>\n        <h3>Current ShintoCoin Value: $1:00</h3>\n        <h3>Number of ShintoCoins Owned:{this.state.totalCoins} </h3>\n        <form onSubmit={this.sellCoins}>\n          <label> How many ShintoCoins do you want to sell?</label>\n          <input name=\"coinsToSell\" value={this.state.coinsToSell} onChange={this.handleChange} />\n          <button className=\"btn\">Sell</button>\n        </form>\n        <h3>{this.state.message}</h3>\n\n      </div >\n\n    )\n  }\n}\n\nexport default Sell;","import React from 'react';\nimport axios from 'axios';\nimport '../styles/styles.css';\nimport { Link } from 'react-router-dom';\n\nclass Browse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ledgerData: [],\n      test: 'test',\n    };\n  };\n\n  componentDidMount() {\n    //fetch ledger data\n    axios.get('/fetchledgerdata')\n\n      .then((response) => {\n        console.log(response);\n        this.setState({ ledgerData: response.data.ledgerdata });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n  }\n\n  render() {\n    return (\n      <div className=\"parentdiv\">\n        <h1>Browse the Leadger</h1>\n        <h3>Here you can browse all Shinto Coin transactions</h3>\n        {this.state.ledgerData.length !== 0\n          ? (\n            <table>\n              <tr>\n                <th colspan=\"4\">ShintoCoin Ledger</th>\n              </tr>\n              <tr>\n                <th>Action</th>\n                <th>Count</th>\n                <th>Value</th>\n                <th>Details</th>\n              </tr>\n              {this.state.ledgerData.map((item, idx) => {\n                return (\n                  <tr>\n                    <th>{item.Action}</th>\n                    <th>{item.Count}</th>\n                    <th>{item.Count}</th>\n                    <th><Link to={`/details/${item.id}`}><button>Details</button></Link></th>\n                  </tr>\n                )\n              })}\n            </table>\n          ) : (<label>No History exists</label>)\n        }\n\n      </div >\n    )\n  }\n\n}\nexport default Browse;","import React from 'react';\nimport '../styles/styles.css';\nimport axios from 'axios';\n\nclass Details extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detailData: null,\n\n    };\n\n  };\n\n  componentDidMount() {\n    axios.get(`/fetchrecord/${this.props.match.params.id}`)\n      .then((response) => {\n        this.setState({ detailData: response.data.detaildata });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"parentdiv\">\n        <h1>Ledger Transaction Details</h1>\n        <h3>Detailed view of a transaction from the ledger</h3>\n        {this.state.detailData\n          ? <div>\n            <h3>Transaction # {this.state.detailData.id}</h3>\n            <h3>{this.state.detailData.Action} - {this.state.detailData.Count} - ShintoCoins</h3>\n          </div>\n          : null}\n\n      </div>\n\n    );\n  }\n\n}\nexport default Details;","import React, { Component } from 'react';\nimport { Switch, Redirect } from \"react-router\";\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport logo from './images/shintoapplogo.png';\nimport Home from './container/Home';\nimport Mine from './container/Mine';\nimport Buy from './container/Buy';\nimport Sell from './container/Sell';\nimport Browse from './container/Browse';\nimport Details from './container/Details';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          {/* changes the route of the page when a nav button is clicked */}\n          <div>\n            <img className=\"App-logo\" src={logo} alt=\"logo\" />\n            <ul className=\"headerelement\">\n              <li className=\"navbar\"><Link className=\"navtag\" to=\"/home\">Home</Link></li>\n              <li className=\"navbar\"><Link className=\"navtag\" to=\"/mine\">Mine Coins</Link></li>\n              <li className=\"navbar\"><Link className=\"navtag\" to=\"/buy\">Buy Coins</Link></li>\n              <li className=\"navbar\"><Link className=\"navtag\" to=\"/sell\">Sell Coins</Link></li>\n              <li className=\"navbar\"><Link className=\"navtag\" to=\"/ledger\">Browse Ledger</Link></li>\n            </ul>\n          </div>\n          {/* When the route changes - my component on the page should change */}\n          <Switch>\n            <Redirect exact from='/' to='/home' />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/mine\" component={Mine} />\n            <Route path=\"/buy\" component={Buy} />\n            <Route path=\"/sell\" component={Sell} />\n            <Route path=\"/ledger\" component={Browse} />\n            <Route path=\"/details/:id\" component={Details} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}